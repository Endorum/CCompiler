

int main(){


    int a = 5;
    int b = 10;
    int c = 10;

    a + b + c + 123;
}

0: Keyword: int
1: identifier : 'main'
2: lparen : '('
3: rparen : ')'
4: lbrace : '{'
5: Keyword: int
6: identifier : 'a'
7: assign : '='
8: integer_literal : '5'
9: semicolon : ';'
10: Keyword: int
11: identifier : 'b'
12: assign : '='
13: integer_literal : '10'
14: semicolon : ';'
15: Keyword: int
16: identifier : 'c'
17: assign : '='
18: integer_literal : '10'
19: semicolon : ';'
20: identifier : 'a'
21: plus : '+'
22: identifier : 'b'
23: plus : '+'
24: identifier : 'c'
25: plus : '+'
26: integer_literal : '123'
27: semicolon : ';'
28: rbrace : '}'
29: end_of_file : 'EOF'
Program
    FunctionDecl type info: int 
        TypeSpecifier: 'int' type info: int 
        Identifier: 'main'
        ParamList
        CompoundStmt
            Declaration type info: int 
                TypeSpecifier: 'int' type info: int 
                Identifier: 'a'
                Initilizer type info: int 
                    Literal: '5' type info: int 
            Declaration type info: int 
                TypeSpecifier: 'int' type info: int 
                Identifier: 'b'
                Initilizer type info: int 
                    Literal: '10' type info: int 
            Declaration type info: int 
                TypeSpecifier: 'int' type info: int 
                Identifier: 'c'
                Initilizer type info: int 
                    Literal: '10' type info: int 
            ExpressionStmt type info: int 
                BinaryExpr: '+' type info: int 
                    BinaryExpr: '+' type info: int 
                        BinaryExpr: '+' type info: int 
                            Identifier: 'a' type info: int 
                            Identifier: 'b' type info: int 
                        Identifier: 'c' type info: int 
                    Literal: '123' type info: int 

Scope level 0:
  b (kind: variable) type: int scope: main
  c (kind: variable) type: int scope: main
  a (kind: variable) type: int scope: main
Defined functions:
  main (return type: int, param count: 0)


Generated IR Instructions:
'main'@L_main <- label
t0@ebx <- add 'a'@[ebp - 4], 'b'@[ebp - 8]
t1@ecx <- add t0@ebx, 'c'@[ebp - 12]
t2@edx <- add t1@ecx, '123'
t2@edx <- return
